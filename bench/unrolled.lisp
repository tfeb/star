;;;; Å tar unrolling benchmarks
;;;
;;; This is to see if there is a difference when manually unrolling
;;; loops
;;;

(in-package :org.tfeb.star/bench)

(defun rolled-range (n)
  (declare (type fixnum n)
           (optimize speed))
  (let ((m 0))
    (declare (type fixnum m))
    (for (((i :type fixnum) (in-naturals :bound n :fixnum t)))
      (for (((j :type fixnum) (in-naturals :bound n :fixnum t)))
        (setf m (max i j m))))
    m))

(defun rolled-range/unsafe (n)
  (declare (type fixnum n)
           (optimize speed (safety 0)))
  (let ((m 0))
    (declare (type fixnum m))
    (for (((i :type fixnum) (in-naturals :bound n :fixnum t)))
      (for (((j :type fixnum) (in-naturals :bound n :fixnum t)))
        (setf m (max i j m))))
    m))

(defun unrolled-range (n)
  (declare (type fixnum n)
           (optimize speed))
  (let ((m 0))
    (declare (type fixnum m))
    (for (((i :type fixnum) (in-naturals :bound n :fixnum t)))
      (for (((j :type fixnum) (stepping (j :initially 0 :then (+ j 4)
                                           :while (< j n) :type fixnum))))
        (setf m (max i j m))
        (incf j)
        (setf m (max i j m))
        (incf j)
        (setf m (max i j m))
        (incf j)
        (setf m (max i j m))))
    m))

(defun unrolled-range/unsafe (n)
  (declare (type fixnum n)
           (optimize speed (safety 0)))
  (let ((m 0))
    (declare (type fixnum m))
    (for (((i :type fixnum) (in-naturals :bound n :fixnum t)))
      (for (((j :type fixnum) (stepping (j :initially 0 :then (+ j 4)
                                           :while (< j n) :type fixnum))))
        (setf m (max i j m))
        (incf j)
        (setf m (max i j m))
        (incf j)
        (setf m (max i j m))
        (incf j)
        (setf m (max i j m))))
    m))

(defun bench-unrolled (n)
  (declare (type fixnum n))
  (assert (zerop (mod n 4)) (n))
  (reporting-times (("** unrolling by 4, range ~D, nesting 2" n))
    (rolled (rolled-range n))
    (unrolled (unrolled-range n))
    (rolled/unsafe (rolled-range/unsafe n))
    (unrolled/unsafe (unrolled-range/unsafe n))))

(define-benchmark unrolled ("Unrolled")
  (bench-unrolled 100000))
